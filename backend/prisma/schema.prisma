generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// USUARIOS Y ROLES
// ============================================

model Usuario {
  id              Int      @id @default(autoincrement())
  nombre          String
  correo          String   @unique
  password        String
  rol             Rol      @default(FILIAL)
  esActivo        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  filialId        Int?
  filial          Filial?  @relation(fields: [filialId], references: [id])
  
  coordinadorId   Int?
  coordinador     Coordinador? @relation(fields: [coordinadorId], references: [id])
  
  acciones        Accion[]
  foroPosts       ForoTema[]
  foroRespuestas  ForoRespuesta[]
  notificaciones  Notificacion[]
  auditorias      AuditoriaRegistro[]

  @@map("usuarios")
}

enum Rol {
  ADMIN
  COORDINADOR
  FILIAL
  ADMIN_GLOBAL
}

model Coordinador {
  id        Int       @id @default(autoincrement())
  nombre    String
  zona      String?
  usuarios  Usuario[]
  
  @@map("coordinadores")
}

// ============================================
// FILIALES
// ============================================

model Filial {
  id                    Int       @id @default(autoincrement())
  nombre                String

  paisId                Int?
  provinciaId           Int?
  departamentoId        Int?
  localidadId           Int?
  nombreLocalidad       String?
  direccionSede         String?
  coordenadas           String?
  kmDesdeEstadio        Float?

  esActiva              Boolean   @default(true)
  esHabilitada          Boolean   @default(true)
  situacion             String    @default("ACTIVA")
  grupoId               Int?

  fechaFundacion        DateTime?
  renovacionAutoridades DateTime?
  esRenovada            Boolean   @default(false)
  periodoRenovacion     String?

  telefono              String?
  mailInstitucional     String?
  mailAlternativo       String?

  actaConstitutiva      String?
  escudo                String?
  planillaIntegrantes   String?
  autoridades           String?

  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  pais                  Pais?         @relation(fields: [paisId], references: [id])
  provincia             Provincia?    @relation(fields: [provinciaId], references: [id])
  departamento          Departamento? @relation(fields: [departamentoId], references: [id])
  localidad             Localidad?    @relation(fields: [localidadId], references: [id])
  grupo                 Grupo?        @relation(fields: [grupoId], references: [id])

  integrantes           Integrante[]
  usuarios              Usuario[]
  acciones              Accion[]
  entradasPedidos       EntradaPedido[]
  encuentros            Encuentro[]

  @@map("filiales")
}

model Integrante {
  id                Int       @id @default(autoincrement())
  filialId          Int
  nombre            String
  dni               String?
  fechaNacimiento   DateTime?
  ocupacion         String?
  telefono          String?
  email             String?
  esActivo          Boolean   @default(true)
  esReferente       Boolean   @default(false)
  cargoId           Int?
  numeroSocio       String?
  esParticipativo   Boolean   @default(false)
  asistenteActa     Boolean   @default(false)
  usuarioIngreso    String?
  fechaIngreso      DateTime  @default(now())
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  filial            Filial    @relation(fields: [filialId], references: [id], onDelete: Cascade)
  cargo             Cargo?    @relation(fields: [cargoId], references: [id])
  historialInactividad HistorialInactividad[]

  @@map("integrantes")
  @@index([filialId])
  @@index([filialId, esActivo])
}

model HistorialInactividad {
  id              Int       @id @default(autoincrement())
  integranteId    Int
  fechaInicio     DateTime
  fechaFin        DateTime?
  motivo          String?
  
  integrante      Integrante @relation(fields: [integranteId], references: [id])
  
  @@map("historial_inactividad")
}

model Cargo {
  id          Int          @id @default(autoincrement())
  nombre      String       @unique
  descripcion String?
  
  integrantes Integrante[]
  
  @@map("cargos")
}

model Grupo {
  id          Int       @id @default(autoincrement())
  nombre      String
  descripcion String?
  
  filiales    Filial[]
  
  @@map("grupos")
}

// ============================================
// GEOGRAFÍA
// ============================================

model Pais {
  id          Int         @id
  nombre      String
  
  filiales    Filial[]
  provincias  Provincia[]
  
  @@map("paises")
}

model Provincia {
  id          Int          @id
  paisId      Int
  nombre      String

  pais        Pais         @relation(fields: [paisId], references: [id])
  filiales    Filial[]
  localidades Localidad[]
  departamentos Departamento[]

  @@map("provincias")
}

model Departamento {
  id          Int       @id
  provinciaId Int?
  nombre      String

  provincia   Provincia? @relation(fields: [provinciaId], references: [id])
  filiales    Filial[]

  @@map("departamentos")
}

model Localidad {
  id            Int       @id
  provinciaId   Int
  departamentoId Int?
  nombre        String
  
  provincia     Provincia @relation(fields: [provinciaId], references: [id])
  filiales      Filial[]
  
  @@map("localidades")
}

// ============================================
// ACCIONES
// ============================================

model Accion {
  id                    Int       @id @default(autoincrement())
  tipo                  String
  filialId              Int?
  fechaRealizacion      DateTime
  calendarioId          Int?
  descripcion           String
  ubicacion             String?
  otrosColaboradores    String?
  encargadoId           Int?
  imagenPromocion       String?
  imagen1               String?
  imagen2               String?
  observaciones         String?
  enviarCorreo          Boolean   @default(false)
  usuarioCorreo         String?
  fechaCarga            DateTime  @default(now())
  createdAt             DateTime  @default(now())
  
  filial                Filial?   @relation(fields: [filialId], references: [id])
  calendario            Calendario? @relation(fields: [calendarioId], references: [id])
  usuario               Usuario?  @relation(fields: [encargadoId], references: [id])
  
  @@map("acciones")
}

model Calendario {
  id          Int       @id @default(autoincrement())
  fecha       DateTime
  rival       String?
  competicion String?
  esLocal     Boolean?
  
  acciones    Accion[]
  entradas    EntradaPedido[]
  
  @@map("calendario_oficial")
}

// ============================================
// ENTRADAS
// ============================================

model EntradaPedido {
  id                  Int       @id @default(autoincrement())
  tipo                String
  filialId            Int?
  nombre              String
  localidadId         Int?
  procedencia         String?
  dni                 String?
  fixtureId           Int
  estadoCarga         Boolean   @default(false)
  entradaAsignada     Boolean   @default(false)
  aprobacionSocios    String    @default("SIN REVISAR")
  enviarTelegram      Boolean   @default(false)
  observaciones       String?
  listadoExcel        Boolean   @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  
  filial              Filial?   @relation(fields: [filialId], references: [id])
  fixture             Calendario @relation(fields: [fixtureId], references: [id])
  
  @@map("entradas_pedidos")
}

// ============================================
// CAPTACIÓN
// ============================================

model Captacion {
  id                  Int       @id @default(autoincrement())
  fechaInicio         DateTime
  fechaFin            DateTime?
  tipoEvento          String?
  nombre              String
  provinciaId         Int?
  localidad           String?
  direccionCompleta   String?
  latitud             Float?
  longitud            Float?
  equipoCaptacionId   Int?
  aCargo              String?
  esSatelite          Boolean   @default(false)
  categorias          String?
  comentario          String?
  estadoPrueba        String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  
  @@map("captacion")
}

// ============================================
// ENCUENTROS
// ============================================

model Encuentro {
  id                  Int       @id @default(autoincrement())
  nombre              String
  fechaInicio         DateTime
  fechaFin            DateTime?
  filialId            Int?
  desde               String?
  latitudOrigen       Float?
  longitudOrigen      Float?
  distanciaAutomatica Float?
  distancia           Float?
  origenAuto          Boolean   @default(false)
  
  filial              Filial?   @relation(fields: [filialId], references: [id])
  
  @@map("encuentros")
}

// ============================================
// FORO
// ============================================

model ForoTema {
  id              Int       @id @default(autoincrement())
  titulo          String
  contenido       String
  categoria       String    @default("GENERAL")
  usuarioId       Int
  esDestacado     Boolean   @default(false)
  esCerrado       Boolean   @default(false)
  vistas          Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  usuario         Usuario   @relation(fields: [usuarioId], references: [id])
  respuestas      ForoRespuesta[]
  etiquetas       ForoEtiqueta[]
  
  @@map("foro_temas")
}

model ForoRespuesta {
  id          Int       @id @default(autoincrement())
  temaId      Int
  contenido   String
  usuarioId   Int
  esDestacada Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  tema        ForoTema  @relation(fields: [temaId], references: [id], onDelete: Cascade)
  usuario     Usuario   @relation(fields: [usuarioId], references: [id])
  
  @@map("foro_respuestas")
}

model ForoEtiqueta {
  id        Int        @id @default(autoincrement())
  nombre    String     @unique
  color     String?
  temas     ForoTema[]
  
  @@map("foro_etiquetas")
}

// ============================================
// NOTIFICACIONES
// ============================================

model Notificacion {
  id          Int       @id @default(autoincrement())
  usuarioId   Int
  tipo        String
  titulo      String
  mensaje     String
  leida       Boolean   @default(false)
  url         String?
  createdAt   DateTime  @default(now())

  usuario     Usuario   @relation(fields: [usuarioId], references: [id])

  @@map("notificaciones")
}

model AuditoriaRegistro {
  id         Int      @id @default(autoincrement())
  usuarioId  Int?
  rol        Rol?
  operacion  String
  tabla      String
  registroId Int?
  filialId   Int?
  datos      Json?
  createdAt  DateTime @default(now())

  usuario    Usuario? @relation(fields: [usuarioId], references: [id])

  @@map("auditoria_registros")
  @@index([tabla, registroId])
  @@index([filialId])
}






